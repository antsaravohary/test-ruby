require "test_helper"

<% module_namespacing do -%>
class <%= controller_class_name %>ControllerTest < ActionDispatch::IntegrationTest
  <%- if mountable_engine? -%>
  include Engine.routes.url_helpers

  <%- end -%>
  context 'as an user with superamdin role I' do
    setup do
      @user = create(:user, email: 'superadmin@email.com', company: nil)
      @user.add_role! :superadmin
      @<%= singular_table_name %> = create(:<%= singular_table_name %>)
    end

    should 'should list <%= index_helper %>' do
      get <%= index_helper %>_url, headers: authorization_header(@user), as: :json
      assert_response :success
      assert_jsonapi_collection_response
    end

    should 'should create <%= singular_table_name %>' do
      assert_difference("<%= class_name %>.count") do
        post <%= index_helper %>_url,
            headers: authorization_header(@user),
            params: {
              data: {
                type: '<%= plural_table_name %>',
                attributes: {
                  <%= attributes_string %>
                }
              }
            }, as: :json
      end

      assert_response 201
      assert_jsonapi_ressource_response
    end

    should 'show <%= singular_table_name %>' do
      get <%= show_helper %>, headers: authorization_header(@user), as: :json
      assert_response :success
      assert_jsonapi_ressource_response
    end

    should 'update <%= singular_table_name %>' do
      patch <%= show_helper %>,
          headers: authorization_header(@user),
          params: {
            data: {
              id: @<%= singular_table_name %>.id.to_s,
              type: '<%= plural_table_name %>',
              attributes: attributes
            }
          }, as: :json
      assert_response 200
      assert_jsonapi_ressource_response
    end

    should 'destroy <%= singular_table_name %>' do
      assert_difference("<%= class_name %>.count", -1) do
        delete <%= show_helper %>, headers: authorization_header(@user), as: :json
      end

      assert_response 204
    end
  end

  private

  def attributes
    { <%= attributes_string %> }
  end
end
<% end -%>
